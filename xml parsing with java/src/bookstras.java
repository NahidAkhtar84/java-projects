
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

//imports
import java.util.ArrayList;
import java.util.Collections;
import java.util.Hashtable;
import java.util.List;
import java.util.stream.Stream;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class bookstras extends javax.swing.JFrame {

     private final JFileChooser openFileChooser;
     String fileName;
    /**
     * Creates new form bookstras
     */
    public bookstras() {
        initComponents();
        openFileChooser = new JFileChooser();
        openFileChooser.setCurrentDirectory(new File("c:\\temp"));
        openFileChooser.setFileFilter(new FileNameExtensionFilter("xml Files", "xml"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        openFile = new javax.swing.JButton();
        label1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        label4 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(null);

        openFile.setBackground(new java.awt.Color(0, 204, 204));
        openFile.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        openFile.setForeground(new java.awt.Color(0, 0, 204));
        openFile.setText("openFile...");
        openFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileActionPerformed(evt);
            }
        });
        jPanel1.add(openFile);
        openFile.setBounds(30, 100, 120, 30);

        label1.setBackground(new java.awt.Color(255, 255, 255));
        label1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        label1.setForeground(new java.awt.Color(51, 0, 255));
        label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label1.setText("File Path here,,,");
        label1.setOpaque(true);
        jPanel1.add(label1);
        label1.setBounds(180, 100, 300, 30);

        label2.setBackground(new java.awt.Color(255, 255, 255));
        label2.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        label2.setForeground(new java.awt.Color(51, 0, 204));
        label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label2.setText("Order Numbers");
        label2.setOpaque(true);
        jPanel1.add(label2);
        label2.setBounds(180, 260, 300, 30);

        label3.setBackground(new java.awt.Color(255, 255, 255));
        label3.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        label3.setForeground(new java.awt.Color(51, 0, 255));
        label3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label3.setText("Maximum Ordered Book Name");
        label3.setOpaque(true);
        jPanel1.add(label3);
        label3.setBounds(180, 200, 300, 30);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 204));
        jLabel1.setText("Price:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 340, 130, 30);

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 255, 204));
        jLabel2.setText("Book Name:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 200, 120, 30);

        jLabel3.setFont(new java.awt.Font("Stencil Std", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 255, 204));
        jLabel3.setText("Result Visualization ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 20, 370, 40);

        label4.setBackground(new java.awt.Color(255, 255, 255));
        label4.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        label4.setForeground(new java.awt.Color(51, 0, 204));
        label4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label4.setText("Price");
        label4.setOpaque(true);
        jPanel1.add(label4);
        label4.setBounds(180, 340, 300, 30);

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 255, 204));
        jLabel4.setText("Order Number:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(30, 260, 140, 30);

        jLabel5.setIcon(new javax.swing.ImageIcon("D:\\projectBloodbank\\soft-light-grass-hd-1080P-wallpaper-middle-size.jpg")); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(4, 4, 830, 450);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileActionPerformed
       int returnValue = openFileChooser.showOpenDialog(this);
                 
        if(returnValue == JFileChooser.APPROVE_OPTION){
            label1.setText(openFileChooser.getSelectedFile().toString());
            fileName = openFileChooser.getSelectedFile().toString();
            
        }
        else{
            label1.setText("File not found");
        }
               
               try {
              SAXParserFactory factory = SAXParserFactory.newInstance();
	SAXParser saxParser = factory.newSAXParser();
              List<Integer> list=new ArrayList<Integer>(); 
              List<String> bookname=new ArrayList<String>(); 
              List<Float> price=new ArrayList<Float>();
	DefaultHandler handler;
            handler = new DefaultHandler() {
                
                boolean bcount = false;
                boolean bprice = false;
                boolean bid = false;
                boolean btitle = false;
                boolean bauthor = false;
                
                public void startElement(String uri, String localName,String qName,
                        Attributes attributes) throws SAXException {
                    
                    System.out.println("Start Element :" + qName);
                    
                    if (qName.equalsIgnoreCase("COUNT")) {
                        bcount = true;
                    }
                    
                    if (qName.equalsIgnoreCase("PRICE")) {
                        bprice = true;
                    }
                    
                    if (qName.equalsIgnoreCase("ISBN")) {
                        bid = true;
                    }
                    
                    if (qName.equalsIgnoreCase("TITLE")) {
                        btitle = true;
                    }
                    if (qName.equalsIgnoreCase("AUTHOR")) {
                        bauthor = true;
                    }
                    
                }
                
                public void endElement(String uri, String localName,
                        String qName) throws SAXException {
                    
                    System.out.println("End Element :" + qName);
                    
                }
                int buf;
                float price1;
                public void characters(char ch[], int start, int length) throws SAXException {
                    
                    if (bcount) {
                        System.out.println("COUNT : " + new String(ch, start, length));
                        buf = Integer.parseInt(new String(ch, start, length));
                        bcount = false;
                    }
                    
                    if (bprice) {
                        System.out.println("PRICE : " + new String(ch, start, length));
                        price1 = Float.parseFloat(new String(ch, start, length));
                        bprice = false;
                    }
                    
                    if (bid) {
                        System.out.println("Book ID : " + new String(ch, start, length));
                        bid = false;
                    }
                    
                    if (btitle) {
                        System.out.println("TITLE : " + new String(ch, start, length));
                        bookname.add(new String(ch, start, length));
                        list.add(buf);
                        price.add(price1);
                        btitle = false;
                    }
                    if (bauthor) {
                        System.out.println("AUTHOR : " + new String(ch, start, length));
                        bauthor = false;
                    }
                    
                }
            };
        
       saxParser.parse(fileName, handler);
       
       System.out.println("The list of Books with its order numbers:");
       System.out.println("**********************************");
       for(int i =0; i<list.size(); i++){
           System.out.println(bookname.get(i));
           System.out.println(list.get(i));
           System.out.println(price.get(i));
       }
       int mxOrder = Collections.max(list,null);
       int pos =list.indexOf(mxOrder);
       String mxbookName = bookname.get(pos);
       float mxprice = price.get(pos);
       System.out.println("Book Name with the maximum orders:");
       System.out.println("**********************************");
       System.out.println("Maximum Ordered Book Name: " + mxbookName);
       System.out.println("Maximum Order Numbers: " + mxOrder);
       System.out.println("Maximum Ordered book's price: " + mxprice);
       
       //Visualize to pane
       label2.setText(Integer.toString(mxOrder));
       label3.setText(mxbookName);
       label4.setText(Float.toString(mxprice));
       
     } catch (Exception e) {
       e.printStackTrace();
     } 
               
        
    }//GEN-LAST:event_openFileActionPerformed

    /**
     * @param args the command line arguments
     * 
     */
    
 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //
         
        
        //
//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bookstras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bookstras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bookstras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bookstras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bookstras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel label4;
    private javax.swing.JButton openFile;
    // End of variables declaration//GEN-END:variables
}
